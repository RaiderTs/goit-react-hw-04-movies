{"version":3,"sources":["services/StylesPagination.js","view/HomePage/HomePage.jsx","services/movies-api.js","services/status.js","components/ErrorMovies/ErrorMovies.module.css","img/—Pngtree—red gradient ring fork symbol_4609561.png","components/ErrorMovies/ErrorMovies.jsx","view/HomePage/HomePage.module.css"],"names":["useStyles","makeStyles","root","margin","display","justifyContent","backgroundColor","color","opacity","HomePage","url","useRouteMatch","useState","films","setFilms","error","setError","Status","PENDING","status","setStatus","totalPage","setTotalPage","location","useLocation","history","useHistory","classes","page","URLSearchParams","search","get","useEffect","fetchTrending","then","results","total_pages","RESOLVED","catch","err","REJECTED","Loader","ErrorMovies","message","className","style","title","list","map","film","item","to","id","link","image","src","URL","poster_path","alt","width","height","filmTitle","Pagination","count","onChange","event","push","Number","showFirstButton","showLastButton","size","shape","variant","BASE_URL","API_KEY","apiService","a","config","fetch","response","ok","json","Promise","reject","Error","fetchSearchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","IDLE","module","exports","ErrorImage","role","errorWrapper","errorImage","text"],"mappings":"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","file":"static/js/HomePage.7e186ade.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: '30px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    '& .MuiPaginationItem-page.Mui-selected, & .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible,  & .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\r\n      backgroundColor: '#f7de03',\r\n    },\r\n    '& .MuiPaginationItem-root': {\r\n      color: '#000000',\r\n    },\r\n    '& .MuiPaginationItem-page:hover, & .MuiPaginationItem-page.Mui-focusVisible': {\r\n      opacity: '0.7',\r\n    },\r\n    '& .MuiPaginationItem-page.Mui-selected:hover, & .MuiPaginationItem-page.Mui-selected.Mui-focusVisible': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiPagination-ul': {\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useRouteMatch, useLocation, useHistory } from 'react-router-dom'; \r\nimport { fetchTrending, URL } from '../../services/movies-api'; \r\nimport { Pagination } from '@material-ui/lab';\r\nimport Status from '../../services/status'; \r\nimport useStyles from '../../services/StylesPagination';\r\n\r\nimport Loader from '../../components/Loader'; \r\nimport ErrorMovies from '../../components/ErrorMovies'; // Для ошибки\r\nimport style from './HomePage.module.css'; \r\n\r\nexport default function HomePage() {\r\n  const { url } = useRouteMatch(); \r\n  const [films, setFilms] = useState([]);\r\n  const [error, setError] = useState({});\r\n  const [status, setStatus] = useState(Status.PENDING);\r\n  const [totalPage, setTotalPage] = useState(0);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const page = new URLSearchParams(location.search).get('page') ?? 1;\r\n\r\n  const onHandlePage = (event, page) => {\r\n    history.push({ ...location, search: `page=${page}` });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    fetchTrending(page)\r\n      .then(({ results, total_pages }) => {\r\n        setFilms(results);\r\n        setTotalPage(total_pages);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      // .then(setStatus(Status.RESOLVED))\r\n      .catch(err => {\r\n        setError('Something went wrong. Try again.');\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [page]);\r\n\r\n  if (status === Status.PENDING) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return <ErrorMovies message={error.message} />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        {films && (\r\n          <>\r\n            \r\n            <h2 className={style.title}>Trending today</h2>\r\n            <ul className={style.list}>\r\n              \r\n              {films.map(film => (\r\n                <li key={film.id} className={style.item}>\r\n                  <Link\r\n                    to={`${url}movies/${film.id}`} \r\n                    className={style.link}\r\n                  >\r\n                    <img\r\n                      className={style.image}\r\n                      src={URL + film.poster_path}\r\n                      alt={film.title}\r\n                      width=\"300\"\r\n                      height=\"450\"\r\n                    />\r\n               \r\n                    <p className={style.filmTitle}>{film.title}</p>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {totalPage > 1 && (\r\n              <Pagination\r\n                className={classes.root}\r\n                count={10}\r\n                onChange={onHandlePage}\r\n                page={Number(page)}\r\n                showFirstButton\r\n                showLastButton\r\n                size=\"large\"\r\n                shape=\"rounded\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '98821d28938ee5f201a6b9b7afe95fef';\r\n\r\nexport const URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\nasync function apiService(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\n// список самых популярных фильмов на сегодня\r\nexport function fetchTrending(page) {\r\n  return apiService(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`,\r\n  );\r\n}\r\n// поиск кинофильма по ключевому слову\r\nexport function fetchSearchMovies(query) {\r\n  return apiService(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\r\n  );\r\n}\r\n//  страница с детальной информацией о кинофильме\r\nexport function fetchMovieDetails(id) {\r\n  return apiService(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\r\n}\r\n// Информация об актерском составе\r\nexport function fetchMovieCast(id) {\r\n  return apiService(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\r\n}\r\n//  информация об обзорах\r\nexport function fetchMovieReviews(id) {\r\n  return apiService(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\r\n}\r\n","const Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default Status;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorWrapper\":\"ErrorMovies_ErrorWrapper__3s5E9\",\"text\":\"ErrorMovies_text__2tA6L\"};","export default __webpack_public_path__ + \"static/media/—Pngtree—red gradient ring fork symbol_4609561.1589bf7d.png\";","import PropTypes from 'prop-types';\r\nimport errorImage from '../../img/—Pngtree—red gradient ring fork symbol_4609561.png';\r\nimport style from './ErrorMovies.module.css';\r\n\r\nfunction ErrorImage({ message }) {\r\n  return (\r\n    <div role=\"alert\" className={style.errorWrapper}>\r\n      <img src={errorImage} width=\"650\" alt=\"Error\" />\r\n      <p text={message} className={style.text}>\r\n        Sorry, something went wrong. Error: {message}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorImage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorImage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"HomePage_title__US0pS\",\"list\":\"HomePage_list__1GWjW\",\"item\":\"HomePage_item__SiILw\",\"link\":\"HomePage_link__2Z9qG\",\"image\":\"HomePage_image__2XJNC\",\"filmTitle\":\"HomePage_filmTitle__3-3Mu\"};"],"sourceRoot":""}